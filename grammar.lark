start: structures*

structures: var_decl | func_decl | repeat_decl | if_decl | func_main_decl

var_decl: VAR DOLLAR IDENTIFIER EQUAL value SEMICOLON

func_decl: FUNC IDENTIFIER LPAREN parameter_list RPAREN LBRACKET statement* RBRACKET
    
repeat_decl: REPEAT LPAREN var_decl SEMICOLON condition SEMICOLON increment RPAREN LBRACKET statement* RBRACKET
condition: IDENTIFIER OPERATOR value | IDENTIFIER OPERATOR IDENTIFIER
increment: IDENTIFIER PM
statement: ECHO LPAREN STRING RPAREN SEMICOLON 

if_decl: IF LPAREN condition RPAREN LBRACKET statement* RBRACKET (ELSE LBRACKET statement* RBRACKET)?
ELSE: "sino"

func_main_decl: FUNC MAIN LPAREN RPAREN LBRACKET statement* RBRACKET

VAR: "int"
FUNC: "func"
REPEAT: "repeat"
IF: "if"
MAIN: "main"
ECHO: "echo"
DOLLAR: "$"
SEMICOLON: ";"
LBRACKET: "{"
RBRACKET: "}"
LPAREN: "("
RPAREN: ")"
OPERATOR: "<" | ">" | "<=" | ">=" | "!=" | "=="
PM: "++" | "--" 
EQUAL: "="
value: INT         -> int
    | FLOAT       -> float
    | BOOLEAN     -> boolean
    | STRING      -> string
    | CHAR        -> char

parameter_list: parameter ("," parameter)*
parameter: type "$" IDENTIFIER

IDENTIFIER: /[a-z][a-z]*/
INT: /\d+/
FLOAT: /\d*\.\d+/
BOOLEAN: "true" | "false"
STRING: /"([^;()\[\]{}]|\\")*"/
CHAR: /'([^']|\\')'/
%import common.WS
%ignore WS


